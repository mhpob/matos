[{"path":"https://www.obrien.page/matos/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://www.obrien.page/matos/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://www.obrien.page/matos/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://www.obrien.page/matos/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://www.obrien.page/matos/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://www.obrien.page/matos/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://www.obrien.page/matos/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://www.obrien.page/matos/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://www.obrien.page/matos/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://www.obrien.page/matos/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://www.obrien.page/matos/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://www.obrien.page/matos/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://www.obrien.page/matos/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://www.obrien.page/matos/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://www.obrien.page/matos/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://www.obrien.page/matos/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://www.obrien.page/matos/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://www.obrien.page/matos/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://www.obrien.page/matos/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://www.obrien.page/matos/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://www.obrien.page/matos/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://www.obrien.page/matos/articles/introduction.html","id":"list-available-files","dir":"Articles","previous_headings":"","what":"List available files","title":"Introduction","text":"First, list_projects returns project page, useful figure URLs associated project. need MATOS permissions order view page. can also view files ’ve uploaded projects using list_project_files, requires logging first. family list_ functions package prompt log moving . Note ’ll entering MATOS username password behind scenes .","code":"all_projects <- list_projects()  head(all_projects) #>                                   name number #> 1                            ACK Array    168 #> 2  APG Atlantic and Shortnose Sturgeon    176 #> 3 ASI - White Shark Study, Montauk, NY    211 #> 4                   ASI Acoustic Array    100 #> 5              ASI Spinner Shark Study    227 #> 6   ASI White Shark Study, Southern NE    232 #>                                               url #> 1 https://matos.asascience.com/project/detail/168 #> 2 https://matos.asascience.com/project/detail/176 #> 3 https://matos.asascience.com/project/detail/211 #> 4 https://matos.asascience.com/project/detail/100 #> 5 https://matos.asascience.com/project/detail/227 #> 6 https://matos.asascience.com/project/detail/232 project_files <- list_project_files(project = 'umces boem offshore wind energy') #> ! Please log in. #> ✔ Login successful!  head(project_files) #>   project                                file_type upload_date #> 1      87 Deployed Receivers – Deployment Metadata  2020-03-30 #> 2      87               Tag Detections - .vfl file  2020-05-28 #> 3      87               Tag Detections - .vfl file  2020-05-28 #> 4      87               Tag Detections - .vfl file  2020-05-28 #> 5      87               Tag Detections - .vfl file  2020-05-28 #> 6      87               Tag Detections - .vfl file  2020-05-28 #>                      file_name #> 1 BOEM_metadata_deployment.xls #> 2  VR2AR_546455_20170328_1.vrl #> 3  VR2AR_546456_20170328_1.vrl #> 4  VR2AR_546457_20170329_1.vrl #> 5  VR2AR_546458_20170329_1.vrl #> 6  VR2AR_546459_20170328_1.vrl #>                                                      url #> 1  https://matos.asascience.com/projectfile/download/375 #> 2 https://matos.asascience.com/projectfile/download/1810 #> 3 https://matos.asascience.com/projectfile/download/1811 #> 4 https://matos.asascience.com/projectfile/download/1812 #> 5 https://matos.asascience.com/projectfile/download/1813 #> 6 https://matos.asascience.com/projectfile/download/1814"},{"path":"https://www.obrien.page/matos/articles/introduction.html","id":"user-credentials","dir":"Articles","previous_headings":"List available files","what":"User credentials","title":"Introduction","text":"side note MATOS username password: matos defaults asking login credentials every time start new session. skirt around can use set_matos_credentials(), installs username password .Renviron file. automatically logged every time use current computer , beware: someone else theoretically access username password gain access computer.","code":""},{"path":"https://www.obrien.page/matos/articles/introduction.html","id":"back-to-the-regularly-scheduled-programming","dir":"Articles","previous_headings":"List available files","what":"Back to the regularly-scheduled programming","title":"Introduction","text":"can also list OTN node Data Extraction Files.","code":"ACT_MATOS_files <- list_extract_files(project = 'umces boem offshore wind energy',                                       detection_type = 'all')  head(ACT_MATOS_files) #>   project            file_type detection_type detection_year #> 1      87 Data Extraction File        matched           2017 #> 2      87 Data Extraction File        matched           2018 #> 3      87 Data Extraction File        matched           2019 #> 4      87 Data Extraction File        matched           2020 #> 5      87 Data Extraction File        matched           2021 #> 6      87 Data Extraction File        matched           2022 #>   upload_date                         file_name #> 1  2023-07-06 mdwea_matched_detections_2017.zip #> 2  2023-07-06 mdwea_matched_detections_2018.zip #> 3  2023-07-06 mdwea_matched_detections_2019.zip #> 4  2023-07-06 mdwea_matched_detections_2020.zip #> 5  2023-07-06 mdwea_matched_detections_2021.zip #> 6  2023-07-06 mdwea_matched_detections_2022.zip #>                                                                url #> 1 https://matos.asascience.com/projectfile/downloadExtraction/87_1 #> 2 https://matos.asascience.com/projectfile/downloadExtraction/87_2 #> 3 https://matos.asascience.com/projectfile/downloadExtraction/87_3 #> 4 https://matos.asascience.com/projectfile/downloadExtraction/87_4 #> 5 https://matos.asascience.com/projectfile/downloadExtraction/87_5 #> 6 https://matos.asascience.com/projectfile/downloadExtraction/87_6"},{"path":"https://www.obrien.page/matos/articles/introduction.html","id":"download-project-or-data-extraction-files","dir":"Articles","previous_headings":"","what":"Download project or data extraction files","title":"Introduction","text":"ways download different types files held MATOS. can download directly know URL file: can download using index ACT_MATOS_files table , file second row.","code":"project_files$url[1] #> [1] \"https://matos.asascience.com/projectfile/download/375\"  get_project_file(url = project_files$url[1]) #>  #> ── Downloading files ────────────────────────────────────────────── #> ✔ File(s) saved to: #>    C:\\Users\\darpa2\\Analysis\\matos\\vignettes\\BOEM_metadata_deployment.xls #>  #> ── Unzipping files ──────────────────────────────────────────────── #> [1] \"C:\\\\Users\\\\darpa2\\\\Analysis\\\\matos\\\\vignettes\\\\BOEM_metadata_deployment.xls\" get_extract_file(file = 2, project = 'umces boem offshore wind energy') #>  #> ── Downloading files ────────────────────────────────────────────── #> ✔ File(s) saved to: #>    C:\\Users\\darpa2\\Analysis\\matos\\vignettes\\mdwea_matched_detections_2018.zip #>  #> ── Unzipping files ──────────────────────────────────────────────── #> ✔ File(s) unzipped to: #>    C:/Users/darpa2/Analysis/matos/vignettes/mdwea_matched_detections_2018.csv #>    C:/Users/darpa2/Analysis/matos/vignettes/data_description.txt #> [1] \"C:/Users/darpa2/Analysis/matos/vignettes/mdwea_matched_detections_2018.csv\" #> [2] \"C:/Users/darpa2/Analysis/matos/vignettes/data_description.txt\""},{"path":"https://www.obrien.page/matos/articles/introduction.html","id":"search-and-download-tag-detections","dir":"Articles","previous_headings":"","what":"Search and download tag detections","title":"Introduction","text":"Using tag_search function, can interface MATOS’ tag search page. careful function – can take , long time return files. function downloads requested CSV working directory, , import = T used, reads R session.","code":"my_detections <- tag_search(tags = paste0('A69-1601-254', seq(60, 90, 1)),                             start_date = '03/01/2016',                             end_date = '04/01/2016',                              import = T)"},{"path":"https://www.obrien.page/matos/articles/introduction.html","id":"upload-files-to-matos","dir":"Articles","previous_headings":"","what":"Upload files to MATOS","title":"Introduction","text":"times want upload new data MATOS. currently accepted data types formats : newly-deployed transmitters (CSV/XLS(X)) detection logs (CSV/VRL) receiver glider deployment metadata (CSV/XLS(X)) receiver events like temperature, tilt, etc. (CSV) glider GPS tracks (CSV) data types use designated Ocean Tracking Network templates: tag metadata receiver deployment metadata glider deployment metadata don’t one templates downloaded, can download package. example: , get uploading!","code":"get_otn_template('glider') upload_file(project = 'umces boem offshore wind energy',             file = c('this_is_a_dummy_file.csv', 'so_is_this.csv'),             data_type = 'new_tags')"},{"path":"https://www.obrien.page/matos/articles/matos-otndo.html","id":"act-members","dir":"Articles","previous_headings":"","what":"ACT members","title":"Summarizing with otndo","text":"’re ACT member, first thing ’ll want list projects access. , can just provide project name number let rip. , provide number associated “UMCES BOEM Offshore Wind Energy”. function bit data cleaning front end runs everything Quarto RMarkdown report. functions use Quarto default, RMarkdown selected : Quarto installed computer, rmd argument set TRUE. Functionality identical matos_tag_summary:","code":"list_my_projects(read_access = T) #>                                             name number #> 33      Maryland Department of Natural Resources     90 #> 46              Navy Kennebec ME Telemetry Array    192 #> 51         NCBO-MD DNR Chesapeake Backbone North    181 #> 52           NCBO-VMRC Chesapeake Backbone South    164 #> 118 UMCES Black Sea Bass & Offshore Construction     97 #> 119          UMCES BOEM Marine Mammal Monitoring    242 #> 120              UMCES BOEM Offshore Wind Energy     87 #> 121           UMCES Chesapeake Backbone, Mid-Bay    161 #> 122  UMCES Lower Hudson Striped Bass Contingents    155 #> 123   UMCES Potomac River Striped Bass Migration     60 #> 124 UMCES Resident Hudson Striped Bass Migration    160 #> 125           UMCES Striped Bass Thermal Squeeze    152 #> 126                              UMCES TailWinds    240 #> 127    UMCES-NYSDEC Hudson Striped Bass Spawning    127 #>                                                 url #> 33   https://matos.asascience.com/project/detail/90 #> 46  https://matos.asascience.com/project/detail/192 #> 51  https://matos.asascience.com/project/detail/181 #> 52  https://matos.asascience.com/project/detail/164 #> 118  https://matos.asascience.com/project/detail/97 #> 119 https://matos.asascience.com/project/detail/242 #> 120  https://matos.asascience.com/project/detail/87 #> 121 https://matos.asascience.com/project/detail/161 #> 122 https://matos.asascience.com/project/detail/155 #> 123  https://matos.asascience.com/project/detail/60 #> 124 https://matos.asascience.com/project/detail/160 #> 125 https://matos.asascience.com/project/detail/152 #> 126 https://matos.asascience.com/project/detail/240 #> 127 https://matos.asascience.com/project/detail/127 matos_receiver_summary(87) # Compiles with Quarto (default) matos_receiver_summary(87, rmd = F)  # Compiles with RMarkdown matos_receiver_summary(87, rmd = T) matos_tag_summary(87)"},{"path":"https://www.obrien.page/matos/articles/matos-rvdat.html","id":"download-the-data","dir":"Articles","previous_headings":"","what":"Download the data","title":"Extracting environmental data with `rvdat`","text":"First, log MATOS account. Next, tell rvdat location vdat.exe executable (check rvdat documentation information ). Using matos, ’m going find VDAT files associated Mid-Bay Chesapeake Backbone array. Note things like temperature tilt logged within VRL/VDAT files, “detections” file type. ’ll download first file temporary directory.","code":"matos_login() #> ! Please log in. #> v Login successful! vdat_here('vdat.exe') detection_files <- list_project_files(   project = 'UMCES Chesapeake Backbone, Mid-Bay',   file_type = 'detections' )  head(detection_files) #>   project                  file_type upload_date #> 2     161 Tag Detections - .vfl file  2023-10-12 #> 4     161 Tag Detections - .vfl file  2023-09-13 #> 5     161 Tag Detections - .vfl file  2023-09-13 #> 6     161 Tag Detections - .vfl file  2023-09-13 #> 7     161 Tag Detections - .vfl file  2023-09-13 #> 8     161 Tag Detections - .vfl file  2023-09-13 #>                     file_name #> 2 VR2AR_546323_20231012_1.vrl #> 4 VR2AR_547715_20230912_1.vrl #> 5 VR2AR_547714_20230912_1.vrl #> 6 VR2AR_546476_20230912_1.vrl #> 7 VR2AR_546470_20230912_1.vrl #> 8 VR2AR_546462_20230912_1.vrl #>                                                       url #> 2 https://matos.asascience.com/projectfile/download/11087 #> 4  https://matos.asascience.com/projectfile/download/8003 #> 5  https://matos.asascience.com/projectfile/download/8002 #> 6  https://matos.asascience.com/projectfile/download/8001 #> 7  https://matos.asascience.com/projectfile/download/8000 #> 8  https://matos.asascience.com/projectfile/download/7999 get_project_file(   url = detection_files$url[1],   out_dir = tempdir() ) #>  #> -- Downloading files ---------------------------------------------- #> Error: Path exists and overwrite is FALSE  vrl_file <- list.files(tempdir(), pattern = 'vrl$', full.names = T)"},{"path":"https://www.obrien.page/matos/articles/matos-rvdat.html","id":"convert-vrl-using-rvdat","dir":"Articles","previous_headings":"","what":"Convert VRL using rvdat","title":"Extracting environmental data with `rvdat`","text":"Now, ’ll use rvdat::vdat_to_folder convert file folder CSV files, one representing one data type. quite files , ’re going focus temperature records stored TEMP.csv.","code":"vdat_to_folder(   vrl_file,   outdir = tempdir() )  #> v File converted: #>   C:\\Users\\darpa2\\AppData\\Local\\Temp\\RtmpqGwadc/VR2AR_546323_20231012_1.vrl #> i Files saved in: #>   C:\\Users\\darpa2\\AppData\\Local\\Temp\\RtmpqGwadc/VR2AR_546323_20231012_1[20240110-16-44-51-xxxxxx].csv-fathom-split list.files(tempdir(), pattern = 'fathom-split', full.names = T) |>    list.files() #>  [1] \"ATTITUDE.csv\"         \"ATTITUDE.csv\"         #>  [3] \"ATTITUDE.csv\"         \"BATTERY.csv\"          #>  [5] \"BATTERY.csv\"          \"BATTERY.csv\"          #>  [7] \"CFG_CHANNEL.csv\"      \"CFG_CHANNEL.csv\"      #>  [9] \"CFG_CHANNEL.csv\"      \"CFG_STUDY.csv\"        #> [11] \"CFG_STUDY.csv\"        \"CFG_STUDY.csv\"        #> [13] \"CFG_TRANSMITTER.csv\"  \"CFG_TRANSMITTER.csv\"  #> [15] \"CFG_TRANSMITTER.csv\"  \"CLOCK_REF.csv\"        #> [17] \"CLOCK_REF.csv\"        \"CLOCK_REF.csv\"        #> [19] \"DATA_SOURCE_FILE.csv\" \"DATA_SOURCE_FILE.csv\" #> [21] \"DATA_SOURCE_FILE.csv\" \"DEPTH.csv\"            #> [23] \"DEPTH.csv\"            \"DEPTH.csv\"            #> [25] \"DET.csv\"              \"DET.csv\"              #> [27] \"DET.csv\"              \"DIAG.csv\"             #> [29] \"DIAG.csv\"             \"DIAG.csv\"             #> [31] \"EVENT.csv\"            \"EVENT.csv\"            #> [33] \"EVENT.csv\"            \"EVENT_INIT.csv\"       #> [35] \"EVENT_INIT.csv\"       \"EVENT_INIT.csv\"       #> [37] \"EVENT_OFFLOAD.csv\"    \"EVENT_OFFLOAD.csv\"    #> [39] \"EVENT_OFFLOAD.csv\"    \"HEALTH_VR2AR.csv\"     #> [41] \"HEALTH_VR2AR.csv\"     \"HEALTH_VR2AR.csv\"     #> [43] \"TEMP.csv\"             \"TEMP.csv\"             #> [45] \"TEMP.csv\"  bwt_file <- list.files(tempdir(), pattern = 'TEMP', full.names = T, recursive = T)"},{"path":"https://www.obrien.page/matos/articles/matos-rvdat.html","id":"read-it-into-r","dir":"Articles","previous_headings":"","what":"Read it into R","title":"Extracting environmental data with `rvdat`","text":"Let’s read data. error, oh ! Let’s see ’s causing . Ah, data doesn’t really start second row. Skip first one take look. Great! data . ’m going clean names little bit convert time column character string POSIX time.","code":"read.csv(bwt_file) #> Error in file(file, \"rt\"): invalid 'description' argument read.csv(bwt_file,          header = FALSE,          nrows = 5) #> Error in file(file, \"rt\"): invalid 'description' argument bwt <- read.csv(   bwt_file,   skip = 1 ) #> Error in file(file, \"rt\"): invalid 'description' argument  head(bwt) #>   tempdesc       devicetimeutc time timeoffseth timecorrections #> 1     TEMP 2022-05-04 16:00:00   NA          NA              NA #> 2     TEMP 2022-05-04 17:00:00   NA          NA              NA #> 3     TEMP 2022-05-04 18:00:00   NA          NA              NA #> 4     TEMP 2022-05-04 19:00:00   NA          NA              NA #> 5     TEMP 2022-05-04 20:00:00   NA          NA              NA #> 6     TEMP 2022-05-04 21:00:00   NA          NA              NA #>      model serialnumber ambientdegc internaldegc #> 1 VR2AR-69       546323      13.558           NA #> 2 VR2AR-69       546323      12.869           NA #> 3 VR2AR-69       546323      12.827           NA #> 4 VR2AR-69       546323      12.806           NA #> 5 VR2AR-69       546323      12.806           NA #> 6 VR2AR-69       546323      12.827           NA names(bwt) <- gsub('[_\\\\.]', '', tolower(names(bwt)))  names(bwt) #> [1] \"tempdesc\"        \"devicetimeutc\"   \"time\"            #> [4] \"timeoffseth\"     \"timecorrections\" \"model\"           #> [7] \"serialnumber\"    \"ambientdegc\"     \"internaldegc\"  bwt$devicetimeutc <- as.POSIXct(bwt$devicetimeutc,                                 tz = 'UTC',                                 format = '%F %T')  head(bwt) #>   tempdesc       devicetimeutc time timeoffseth timecorrections #> 1     TEMP 2022-05-04 16:00:00   NA          NA              NA #> 2     TEMP 2022-05-04 17:00:00   NA          NA              NA #> 3     TEMP 2022-05-04 18:00:00   NA          NA              NA #> 4     TEMP 2022-05-04 19:00:00   NA          NA              NA #> 5     TEMP 2022-05-04 20:00:00   NA          NA              NA #> 6     TEMP 2022-05-04 21:00:00   NA          NA              NA #>      model serialnumber ambientdegc internaldegc #> 1 VR2AR-69       546323      13.558           NA #> 2 VR2AR-69       546323      12.869           NA #> 3 VR2AR-69       546323      12.827           NA #> 4 VR2AR-69       546323      12.806           NA #> 5 VR2AR-69       546323      12.806           NA #> 6 VR2AR-69       546323      12.827           NA"},{"path":"https://www.obrien.page/matos/articles/matos-rvdat.html","id":"see-what-weve-got","dir":"Articles","previous_headings":"","what":"See what we’ve got","title":"Extracting environmental data with `rvdat`","text":"Now time series, let’s see looks like! plot chunk bwt","code":"plot(ambientdegc ~ devicetimeutc,      data = bwt,      type = 'l')"},{"path":"https://www.obrien.page/matos/articles/matos-rvdat.html","id":"other-variables","dir":"Articles","previous_headings":"","what":"Other variables","title":"Extracting environmental data with `rvdat`","text":"can pull variables similar manner. Take, example, receiver tilt, located ATTITUDE.csv. plot chunk tilt Depth, DEPTH.csv: plot chunk depth Battery, BATTERY.csv: plot chunk battery Noise, actually diagnostic file DIAG.csv: Hourly summaries pings detections also diagnositc file: plot chunk detections plot chunk detections really located DET.csv. data gleaned particular receiver programmed particular way – note many data fields empty! Depending receiver, programmed , arguments passed rvdat (time correction, anyone?), split CSV look rather different.","code":"env_import <- function(file){   hold <- list.files(     tempdir(),     pattern = file,     full.names = T,     recursive = T   ) |>      read.csv(skip = 1)      names(hold) <- gsub('[_\\\\.]', '', tolower(names(hold)))      hold$devicetimeutc <- as.POSIXct(hold$devicetimeutc,                                    tz = 'UTC',                                    format = '%F %T')      hold }  tilt <- env_import('ATTITUDE') #> Error in file(file, \"rt\"): invalid 'description' argument  plot(tiltdeg ~ devicetimeutc, data = tilt, type = 'l') depth <- env_import('DEPTH') #> Error in file(file, \"rt\"): invalid 'description' argument  plot(depthm ~ devicetimeutc, data = depth) battery <- env_import('BATTERY') #> Error in file(file, \"rt\"): invalid 'description' argument  plot(batteryvoltagev ~ devicetimeutc, data = battery) diagnostics <- env_import('DIAG') #> Error in file(file, \"rt\"): invalid 'description' argument  plot(noisemeanmv ~ devicetimeutc, data = diagnostics) plot(ppmdetections ~ devicetimeutc, data = diagnostics) plot(ppmpings ~ devicetimeutc, data = diagnostics) dets <- env_import('DET') #> Error in file(file, \"rt\"): invalid 'description' argument  head(dets[, ]) #>   detdesc       devicetimeutc time timeoffseth timecorrections #> 1     DET 2022-05-04 15:28:58   NA          NA              NA #> 2     DET 2022-05-04 15:39:32   NA          NA              NA #> 3     DET 2022-05-04 15:49:37   NA          NA              NA #> 4     DET 2022-05-04 16:09:11   NA          NA              NA #> 5     DET 2022-05-04 16:18:23   NA          NA              NA #> 6     DET 2022-05-04 16:27:44   NA          NA              NA #>      model serialnumber channel detectiontype         fullid    id #> 1 VR2AR-69       546323       1           PPM A69-1601-60787 60787 #> 2 VR2AR-69       546323       1           PPM A69-1601-60787 60787 #> 3 VR2AR-69       546323       1           PPM A69-1601-60787 60787 #> 4 VR2AR-69       546323       1           PPM A69-1601-60787 60787 #> 5 VR2AR-69       546323       1           PPM A69-1601-60787 60787 #> 6 VR2AR-69       546323       1           PPM A69-1601-60787 60787 #>   rawdata transmitterserial signalstrengthdb noisedb gaindb #> 1      NA                NA               NA      NA     NA #> 2      NA                NA               NA      NA     NA #> 3      NA                NA               NA      NA     NA #> 4      NA                NA               NA      NA     NA #> 5      NA                NA               NA      NA     NA #> 6      NA                NA               NA      NA     NA #>   qualityscore stationname latitude longitude gpshdop #> 1           NA          NA       NA        NA      NA #> 2           NA          NA       NA        NA      NA #> 3           NA          NA       NA        NA      NA #> 4           NA          NA       NA        NA      NA #> 5           NA          NA       NA        NA      NA #> 6           NA          NA       NA        NA      NA"},{"path":"https://www.obrien.page/matos/articles/multiple-projects.html","id":"parallel","dir":"Articles","previous_headings":"","what":"Parallel","title":"`matos` for the power user","text":"like use future family packages run things parallel specifically, future.apply. get quite projects, speeds pulling files MATOS quite bit.","code":""},{"path":"https://www.obrien.page/matos/articles/multiple-projects.html","id":"listing","dir":"Articles","previous_headings":"","what":"Listing","title":"`matos` for the power user","text":"’s 142 files need keep track! really adds .","code":"library(future.apply) plan(multisession)  # List files in all of my projects extraction_files <- future_lapply(projects$number,                                    function(x){                                     list_extract_files(x)                                     }                                   )  # Bind together into one data frame extraction_files <- do.call(rbind, extraction_files)  head(extraction_files) #>   project            file_type detection_type detection_year #> 1      90 Data Extraction File        matched           2015 #> 2      90 Data Extraction File        matched           2016 #> 3      90 Data Extraction File        matched           2017 #> 4      90 Data Extraction File        matched           2018 #> 5      90 Data Extraction File        matched           2019 #> 6      90 Data Extraction File        matched           2020 #>   upload_date                            file_name #> 1  2023-03-21 mddnr1nr_matched_detections_2015.zip #> 2  2023-03-21 mddnr1nr_matched_detections_2016.zip #> 3  2023-03-21 mddnr1nr_matched_detections_2017.zip #> 4  2023-03-21 mddnr1nr_matched_detections_2018.zip #> 5  2023-03-21 mddnr1nr_matched_detections_2019.zip #> 6  2023-07-06 mddnr1nr_matched_detections_2020.zip #>                                                                url #> 1 https://matos.asascience.com/projectfile/downloadExtraction/90_1 #> 2 https://matos.asascience.com/projectfile/downloadExtraction/90_2 #> 3 https://matos.asascience.com/projectfile/downloadExtraction/90_3 #> 4 https://matos.asascience.com/projectfile/downloadExtraction/90_4 #> 5 https://matos.asascience.com/projectfile/downloadExtraction/90_5 #> 6 https://matos.asascience.com/projectfile/downloadExtraction/90_6"},{"path":"https://www.obrien.page/matos/articles/multiple-projects.html","id":"downloading","dir":"Articles","previous_headings":"","what":"Downloading","title":"`matos` for the power user","text":"want download files, can something similar. just need change function ’re running parallel get_extract_file provide URLs list made via list_extract_files. ’ll download first three files demonstration purposes.","code":"future_lapply(extraction_files$url[1:3],                function(x){                 get_extract_file(url = x)               } ) #>    C:\\Users\\darpa2\\Analysis\\matos\\vignettes\\mddnr1nr_matched_detections_2015.zip  #>    C:/Users/darpa2/Analysis/matos/vignettes/mddnr1nr_matched_detections_2015.csv #>    C:/Users/darpa2/Analysis/matos/vignettes/data_description.txt #>  #> ── Downloading files ────────────────────────────────────────────── #> ✔ File(s) saved to: #>  #> ── Unzipping files ──────────────────────────────────────────────── #> ✔ File(s) unzipped to: #>    C:\\Users\\darpa2\\Analysis\\matos\\vignettes\\mddnr1nr_matched_detections_2016.zip  #>    C:/Users/darpa2/Analysis/matos/vignettes/mddnr1nr_matched_detections_2016.csv #>    C:/Users/darpa2/Analysis/matos/vignettes/data_description.txt #>  #> ── Downloading files ────────────────────────────────────────────── #> ✔ File(s) saved to: #>  #> ── Unzipping files ──────────────────────────────────────────────── #> ✔ File(s) unzipped to: #>    C:\\Users\\darpa2\\Analysis\\matos\\vignettes\\mddnr1nr_matched_detections_2017.zip  #>    C:/Users/darpa2/Analysis/matos/vignettes/mddnr1nr_matched_detections_2017.csv #>    C:/Users/darpa2/Analysis/matos/vignettes/data_description.txt #>  #> ── Downloading files ────────────────────────────────────────────── #> ✔ File(s) saved to: #>  #> ── Unzipping files ──────────────────────────────────────────────── #> ✔ File(s) unzipped to: #> [[1]] #> [1] \"C:/Users/darpa2/Analysis/matos/vignettes/mddnr1nr_matched_detections_2015.csv\" #> [2] \"C:/Users/darpa2/Analysis/matos/vignettes/data_description.txt\"                 #>  #> [[2]] #> [1] \"C:/Users/darpa2/Analysis/matos/vignettes/mddnr1nr_matched_detections_2016.csv\" #> [2] \"C:/Users/darpa2/Analysis/matos/vignettes/data_description.txt\"                 #>  #> [[3]] #> [1] \"C:/Users/darpa2/Analysis/matos/vignettes/mddnr1nr_matched_detections_2017.csv\" #> [2] \"C:/Users/darpa2/Analysis/matos/vignettes/data_description.txt\""},{"path":"https://www.obrien.page/matos/articles/multiple-projects.html","id":"summarizing","dir":"Articles","previous_headings":"","what":"Summarizing","title":"`matos` for the power user","text":"can looping receiver transmitter push summaries. , create 24 reports! Still lot, quite bit easier digest millions detections spread 142 files.","code":"future_lapply(projects$number[1:2],                function(x){                 matos_receiver_summary(x)               } )  future_lapply(projects$number[1:2],                function(x){                 matos_tag_summary(x)               } )"},{"path":"https://www.obrien.page/matos/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Michael O'Brien. Author, maintainer.","code":""},{"path":"https://www.obrien.page/matos/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"O'Brien M (2024). matos: Interface Mid-Atlantic Acoustic Telemetry Observing System (MATOS). R package version 0.4.00,  https://matos.obrien.page, https://github.com/mhpob/matos.","code":"@Manual{,   title = {matos: Interface with the Mid-Atlantic Acoustic Telemetry Observing System (MATOS)},   author = {Michael O'Brien},   year = {2024},   note = {R package version 0.4.00,  https://matos.obrien.page},   url = {https://github.com/mhpob/matos}, }"},{"path":"https://www.obrien.page/matos/index.html","id":"matos","dir":"","previous_headings":"","what":"Interface with the Mid-Atlantic Acoustic Telemetry Observing System (MATOS)","title":"Interface with the Mid-Atlantic Acoustic Telemetry Observing System (MATOS)","text":"{matos} API Mid-Atlantic Acoustic Telemetry Observing System website, powered suite httr rvest functions. Please note need MATOS account, can sign , order interface project-specific files.","code":""},{"path":"https://www.obrien.page/matos/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Interface with the Mid-Atlantic Acoustic Telemetry Observing System (MATOS)","text":"can install ---date version R-universe GitHub. R-universe: GitHub:","code":"install.packages(   'matos',   repos = c('https://mhpob.r-universe.dev',             'https://cloud.r-project.org') ) # install.packages(\"remotes\") remotes::install_github(\"mhpob/matos\")"},{"path":"https://www.obrien.page/matos/index.html","id":"quick-start","dir":"","previous_headings":"","what":"Quick start","title":"Interface with the Mid-Atlantic Acoustic Telemetry Observing System (MATOS)","text":"functions list, download, upload files MATOS – check vignettes worked examples. don’t want read just want get detection files, bare bones get running:","code":""},{"path":"https://www.obrien.page/matos/index.html","id":"list_my_projects","dir":"","previous_headings":"Quick start","what":"list_my_projects","title":"Interface with the Mid-Atlantic Acoustic Telemetry Observing System (MATOS)","text":"Logs MATOS database pings project turn see read/write access, listing .","code":""},{"path":"https://www.obrien.page/matos/index.html","id":"list_extract_files","dir":"","previous_headings":"Quick start","what":"list_extract_files","title":"Interface with the Mid-Atlantic Acoustic Telemetry Observing System (MATOS)","text":"project name number list_my_projects, use function list files containing Ocean Tracking Network matched detections.","code":""},{"path":"https://www.obrien.page/matos/index.html","id":"get_extract_file","dir":"","previous_headings":"Quick start","what":"get_extract_file","title":"Interface with the Mid-Atlantic Acoustic Telemetry Observing System (MATOS)","text":"Now URLs detection extract files list_extract_files, put download file computer.","code":""},{"path":"https://www.obrien.page/matos/index.html","id":"development","dir":"","previous_headings":"","what":"Development","title":"Interface with the Mid-Atlantic Acoustic Telemetry Observing System (MATOS)","text":"noted , package undergoing ton development. ’s something missed, please open issue GitHub email (Mike O’Brien: obrien@umces.edu) directly.","code":""},{"path":"https://www.obrien.page/matos/reference/act_file_download.html","id":null,"dir":"Reference","previous_headings":"","what":"Place where functions live for the matos_*_summary family of functions — act_file_download","title":"Place where functions live for the matos_*_summary family of functions — act_file_download","text":"Place functions live matos_*_summary family functions","code":""},{"path":"https://www.obrien.page/matos/reference/act_file_download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Place where functions live for the matos_*_summary family of functions — act_file_download","text":"","code":"act_file_download(   type,   temp_dir = NULL,   matos_project = NULL,   project_files = NULL )"},{"path":"https://www.obrien.page/matos/reference/act_file_download.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Place where functions live for the matos_*_summary family of functions — act_file_download","text":"type type data: qualified unqualified detections; deployment metadata temp_dir location temporary directory matos_project matos project number project_files qualified/unqualified detection files","code":""},{"path":"https://www.obrien.page/matos/reference/get_extract_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Download OTN data extraction files from the MATOS website — get_extract_file","title":"Download OTN data extraction files from the MATOS website — get_extract_file","text":"get_extract_file downloads files MATOS website. best-used conjunction list_extract_files.","code":""},{"path":"https://www.obrien.page/matos/reference/get_extract_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download OTN data extraction files from the MATOS website — get_extract_file","text":"","code":"get_extract_file(   file = NULL,   project = NULL,   url = NULL,   out_dir = getwd(),   overwrite = F,   to_vue = F )"},{"path":"https://www.obrien.page/matos/reference/get_extract_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download OTN data extraction files from the MATOS website — get_extract_file","text":"file character vector listing name file, numeric listing index found list_extract_files. project character vector listing full name project, numeric listing project number. url URL file downloaded. out_dir Character. directory/folder want file saved ? Default current working directory. overwrite Logical. want file name overwritten? Passed httr::write_disk. to_vue Logical. Convert VUE export format?","code":""},{"path":"https://www.obrien.page/matos/reference/get_extract_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download OTN data extraction files from the MATOS website — get_extract_file","text":"","code":"if (FALSE) { # If you know the direct URL to your file, you don't need the file or project names: get_extract_file(url = \"https://matos.asascience.com/projectfile/download/327\")  get_extract_file(file = 1, project = 87) }"},{"path":"https://www.obrien.page/matos/reference/get_extract_updates.html","id":null,"dir":"Reference","previous_headings":"","what":"Download all data extraction files that were updated after a certain date — get_extract_updates","title":"Download all data extraction files that were updated after a certain date — get_extract_updates","text":"loop around get_extract_file.","code":""},{"path":"https://www.obrien.page/matos/reference/get_extract_updates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download all data extraction files that were updated after a certain date — get_extract_updates","text":"","code":"get_extract_updates(..., out_dir = getwd(), overwrite = F, to_vue = F)"},{"path":"https://www.obrien.page/matos/reference/get_extract_updates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download all data extraction files that were updated after a certain date — get_extract_updates","text":"... arguments list_extract_files out_dir Character. directory/folder want file saved ? Default current working directory. Passed httr::write_disk via get_extract_file. overwrite Logical. want file name overwritten? Passed httr::write_disk via get_extract_file. to_vue Logical. data converted match VUE's CSV export?","code":""},{"path":"https://www.obrien.page/matos/reference/get_otn_template.html","id":null,"dir":"Reference","previous_headings":"","what":"Download Ocean-Tracking-Network-style metadata templates — get_otn_template","title":"Download Ocean-Tracking-Network-style metadata templates — get_otn_template","text":"Download Ocean-Tracking-Network-style metadata templates","code":""},{"path":"https://www.obrien.page/matos/reference/get_otn_template.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download Ocean-Tracking-Network-style metadata templates — get_otn_template","text":"","code":"get_otn_template(   template_type = c(\"tag\", \"receiver\", \"glider\"),   dest_file = NULL )"},{"path":"https://www.obrien.page/matos/reference/get_otn_template.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download Ocean-Tracking-Network-style metadata templates — get_otn_template","text":"template_type Character string. One : \"tag\" (default), tagging data submittal template; \"receiver\", deployment data submittal template; \"glider\", wave Slocum glider metadata template. dest_file Optional character string noting like file downloaded. Defaults working directory original file name.","code":""},{"path":"https://www.obrien.page/matos/reference/get_otn_template.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download Ocean-Tracking-Network-style metadata templates — get_otn_template","text":"Ocean Tracking Network metadata template XLSX format.","code":""},{"path":"https://www.obrien.page/matos/reference/get_otn_template.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download Ocean-Tracking-Network-style metadata templates — get_otn_template","text":"","code":"if (FALSE) { # Tag metadata template downloaded to working directory get_otn_template()  # Glider metadata template downloaded to downloads folder get_otn_template(\"glider\", \"c:/users/myusername/downloads/glider_metadata.xlsx\") }"},{"path":"https://www.obrien.page/matos/reference/get_project_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Download project files from the MATOS website — get_project_file","title":"Download project files from the MATOS website — get_project_file","text":"get_project_file downloads files MATOS website. best-used conjunction list_extract_files list_project_files.","code":""},{"path":"https://www.obrien.page/matos/reference/get_project_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download project files from the MATOS website — get_project_file","text":"","code":"get_project_file(   file = NULL,   project = NULL,   url = NULL,   out_dir = getwd(),   overwrite = F,   to_vue = F )"},{"path":"https://www.obrien.page/matos/reference/get_project_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download project files from the MATOS website — get_project_file","text":"file character vector listing name file, numeric listing index found list_project_files. project character vector listing full name project, numeric listing project number. url URL file downloaded. out_dir Character. directory/folder want file saved ? Default current working directory. overwrite Logical. want file name overwritten? Passed httr::write_disk. to_vue Logical. Convert VUE export format?","code":""},{"path":"https://www.obrien.page/matos/reference/get_project_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download project files from the MATOS website — get_project_file","text":"","code":"if (FALSE) { # If you know the index of the file, you can provide some numbers get_project_file(file = 1, project = 87)  # If you know the direct URL to your file, you don't need the file or project names: get_project_file(url = \"https://matos.asascience.com/projectfile/download/327\") }"},{"path":"https://www.obrien.page/matos/reference/get_tag_search.html","id":null,"dir":"Reference","previous_headings":"","what":"Search for tags on the MATOS website — get_tag_search","title":"Search for tags on the MATOS website — get_tag_search","text":"function interface MATOS' tag search page, result CSV downloaded working directory. aware: downloads can take long time, especially many tags searching long period time.","code":""},{"path":"https://www.obrien.page/matos/reference/get_tag_search.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search for tags on the MATOS website — get_tag_search","text":"","code":"get_tag_search(tags, start_date, end_date, import = F)"},{"path":"https://www.obrien.page/matos/reference/get_tag_search.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search for tags on the MATOS website — get_tag_search","text":"tags Character vector tags. coerced CSV POSTing website. start_date Character string listing start date MM/DD/YYYY format. dates provided, tag detections returned. end_date Character string listing end date MM/DD/YYYY format. dates provided, tag detections returned. import downloaded data imported R data frame? Default FALSE.","code":""},{"path":"https://www.obrien.page/matos/reference/get_tag_search.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search for tags on the MATOS website — get_tag_search","text":"","code":"if (FALSE) { get_tag_search(   tags = paste0(\"A69-1601-254\", seq(60, 90, 1)),   start_date = \"03/01/2016\",   end_date = \"04/01/2016\" ) }"},{"path":"https://www.obrien.page/matos/reference/list_extract_files.html","id":null,"dir":"Reference","previous_headings":"","what":"List OTN data extraction files — list_extract_files","title":"List OTN data extraction files — list_extract_files","text":"function list file names, types, upload date, URLs OTN data extraction files -- basically everything see Data Extraction Files section project page. project page, prompted log .","code":""},{"path":"https://www.obrien.page/matos/reference/list_extract_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List OTN data extraction files — list_extract_files","text":"","code":"list_extract_files(   project = NULL,   detection_type = c(\"all\", \"matched\", \"external\", \"qualified\", \"sentinel\",     \"unqualified\"),   since = NULL )"},{"path":"https://www.obrien.page/matos/reference/list_extract_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List OTN data extraction files — list_extract_files","text":"project Either project number (number project page URL) full name project (big name bold project page, \"Project Title\"). detection_type one , vector , \"\" (default), \"matched\", \"external\", \"qualified\", \"sentinel_tag\", \"unqualified\". Partial matching allowed, repair correct argument spaces words \"detection(s)\" included. information data types can found OTN's website. since list files uploaded date. Optional, must YYYY-MM-DD format.","code":""},{"path":"https://www.obrien.page/matos/reference/list_extract_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List OTN data extraction files — list_extract_files","text":"data frame columns \"project\", \"file_type\", \"detection_type\", 'detection_year', 'upload_date', 'file_name', \"url\".","code":""},{"path":"https://www.obrien.page/matos/reference/list_extract_files.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"List OTN data extraction files — list_extract_files","text":"list_extract_files wrapper around web-scraping routine: find project number provided, 2) download HTML table, 3) parse URL file, 4) combine table URLs data frame. function useful investigating files available, downloading get_extract_file. list_extract_files lists files associated ACT_MATOS OTN node. files listed Data Extraction Files page.","code":""},{"path":"https://www.obrien.page/matos/reference/list_extract_files.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List OTN data extraction files — list_extract_files","text":"","code":"if (FALSE) { # List all extraction files using project number list_extract_files(87)  # Or, just grab the matched receiver detections list_files(project = 87, detection_type = \"qualified\")  # OR list files using the project name list_files(\"umces boem offshore wind energy\") }"},{"path":"https://www.obrien.page/matos/reference/list_my_projects.html","id":null,"dir":"Reference","previous_headings":"","what":"List personal MATOS projects — list_my_projects","title":"List personal MATOS projects — list_my_projects","text":"function lists functions logged-user permissions.","code":""},{"path":"https://www.obrien.page/matos/reference/list_my_projects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List personal MATOS projects — list_my_projects","text":"","code":"list_my_projects(read_access = T)"},{"path":"https://www.obrien.page/matos/reference/list_my_projects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List personal MATOS projects — list_my_projects","text":"read_access want list projects file-read permission? Defaults TRUE, though significant speed switched FALSE.","code":""},{"path":"https://www.obrien.page/matos/reference/list_my_projects.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List personal MATOS projects — list_my_projects","text":"","code":"if (FALSE) { # After logging in, just type the following: list_my_projects() }"},{"path":"https://www.obrien.page/matos/reference/list_project_files.html","id":null,"dir":"Reference","previous_headings":"","what":"List MATOS project files — list_project_files","title":"List MATOS project files — list_project_files","text":"function lists file names, types, upload date, URLs MATOS project files -- basically everything see Project Files section project page. project page, prompted log .","code":""},{"path":"https://www.obrien.page/matos/reference/list_project_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List MATOS project files — list_project_files","text":"","code":"list_project_files(   project = NULL,   file_type = c(\"all\", \"detections\", \"receiver_metadata\", \"tag_metadata\"),   since = NULL )"},{"path":"https://www.obrien.page/matos/reference/list_project_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List MATOS project files — list_project_files","text":"project Either project number (number project page URL) full name project (big name bold project page, \"Project Title\"). file_type one , vector , \"\" (default), \"detections\", \"receiver_metadata\", \"tag_metadata\". Partial matching allowed. since list files uploaded date. Optional, must YYYY-MM-DD format.","code":""},{"path":"https://www.obrien.page/matos/reference/list_project_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List MATOS project files — list_project_files","text":"data frame columns \"project\", \"file_type\", \"upload_date\", \"file_name\".","code":""},{"path":"https://www.obrien.page/matos/reference/list_project_files.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"List MATOS project files — list_project_files","text":"list_project_files wrapper around web-scraping routine: find project number provided, 2) download HTML table, 3) parse URL file, 4) combine table URLs data frame. function useful investigating files available, downloading get_project_file. list_project_files lists tag receiver metadata files uploaded user. files listed Project Files section project page.","code":""},{"path":"https://www.obrien.page/matos/reference/list_project_files.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List MATOS project files — list_project_files","text":"","code":"if (FALSE) { # List files using project number: list_project_files(87)  # Or using the project name list_project_files(\"umces boem offshore wind energy\")  # List only the receiver deployment metadata files List_project_files(87, \"receiver_metadata\")  # List both the receiver and transmitter deployment metadata files List_project_files(87, c(\"receiver_metadata\", \"tag_metadata\"))  # Cheat and use shorter names List_project_files(87, c(\"receiver\", \"tag\")) }"},{"path":"https://www.obrien.page/matos/reference/list_projects.html","id":null,"dir":"Reference","previous_headings":"","what":"List MATOS projects — list_projects","title":"List MATOS projects — list_projects","text":"function scrapes table found https://matos.asascience.com/project combines project metadata stored Ocean Tracking Network Geoserver. table provides full name project, collection code, MATOS project number, MATOS project page URL, project status, full name, citation, website, project type, area, abstract. need log via matos_login permissions view/download table.","code":""},{"path":"https://www.obrien.page/matos/reference/list_projects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List MATOS projects — list_projects","text":"","code":"list_projects(what = c(\"all\", \"mine\"), read_access = T)"},{"path":"https://www.obrien.page/matos/reference/list_projects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List MATOS projects — list_projects","text":"list projects want returned: projects (\"\", default) projects (\"mine\")? read_access listing projects, want list projects file-read permission? Defaults TRUE, though significant speed switched FALSE.","code":""},{"path":"https://www.obrien.page/matos/reference/list_projects.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List MATOS projects — list_projects","text":"","code":"if (FALSE) { # List all projects, the default: list_projects()  # List your projects (which may contain some for which you do not have read access): list_projects(\"mine\", read_access = F) }"},{"path":"https://www.obrien.page/matos/reference/matos.html","id":null,"dir":"Reference","previous_headings":"","what":"matos: Interface with the Mid-Atlantic Acoustic Telemetry Observing System (MATOS) — matos","title":"matos: Interface with the Mid-Atlantic Acoustic Telemetry Observing System (MATOS) — matos","text":"package provides HTML-scaping functions interact MATOS website (https://matos.asascience.com/). Functions allow aggreation data downloading posting files.","code":""},{"path":[]},{"path":"https://www.obrien.page/matos/reference/matos.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"matos: Interface with the Mid-Atlantic Acoustic Telemetry Observing System (MATOS) — matos","text":"Maintainer: Michael O'Brien mike@obrien.page (ORCID)","code":""},{"path":"https://www.obrien.page/matos/reference/matos_login.html","id":null,"dir":"Reference","previous_headings":"","what":"Log in to your MATOS account — matos_login","title":"Log in to your MATOS account — matos_login","text":"function prompts username (email) password associated MATOS account. necessary may interface project-specific files. MATOS account can sign one .","code":""},{"path":"https://www.obrien.page/matos/reference/matos_login.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log in to your MATOS account — matos_login","text":"","code":"matos_login()"},{"path":"https://www.obrien.page/matos/reference/matos_login.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Log in to your MATOS account — matos_login","text":"pop appear asking username password. everything works , credentials kept sessions' cookies. username/password saved -- done intentionally accidentally save credentials public script.","code":""},{"path":"https://www.obrien.page/matos/reference/matos_login.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Log in to your MATOS account — matos_login","text":"","code":"if (FALSE) { # Type: matos_login() # ...then follow the on-screen prompts }"},{"path":"https://www.obrien.page/matos/reference/matos_logoff.html","id":null,"dir":"Reference","previous_headings":"","what":"Log out of your MATOS account — matos_logoff","title":"Log out of your MATOS account — matos_logoff","text":"function takes arguments -- just tells MATOS want log . Useful changing users public computer like protect projects.","code":""},{"path":"https://www.obrien.page/matos/reference/matos_logoff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log out of your MATOS account — matos_logoff","text":"","code":"matos_logoff()"},{"path":"https://www.obrien.page/matos/reference/matos_logoff.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Log out of your MATOS account — matos_logoff","text":"","code":"matos_logoff() #> ✔ Logged out."},{"path":"https://www.obrien.page/matos/reference/matos_receiver_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Create summary reports of receiver project data from the OTN data push — matos_receiver_summary","title":"Create summary reports of receiver project data from the OTN data push — matos_receiver_summary","text":"Create summary reports receiver project data OTN data push","code":""},{"path":"https://www.obrien.page/matos/reference/matos_receiver_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create summary reports of receiver project data from the OTN data push — matos_receiver_summary","text":"","code":"matos_receiver_summary(   matos_project = NULL,   qualified = NULL,   unqualified = NULL,   deployment = NULL,   ... )"},{"path":"https://www.obrien.page/matos/reference/matos_receiver_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create summary reports of receiver project data from the OTN data push — matos_receiver_summary","text":"matos_project MATOS project number name wish summarized qualified, unqualified Default NULL: OTN qualified unqualified detections downloaded MATOS unzipped. wish download files (member ACT), argument also accepts character vector file paths qualified/unqualified detections. can CSVs zipped folders. deployment File path user-supplied master OTN receiver deployment metadata. ... Arguments passed otndo::make_receiver_push_summary","code":""},{"path":"https://www.obrien.page/matos/reference/matos_receiver_summary.html","id":"no-files-provided","dir":"Reference","previous_headings":"","what":"No files provided","title":"Create summary reports of receiver project data from the OTN data push — matos_receiver_summary","text":"provide ACT project number title leave arguments defaults, function ask log proceed download necessary files. provide already-downloaded files can speed process substantially.","code":""},{"path":"https://www.obrien.page/matos/reference/matos_receiver_summary.html","id":"output","dir":"Reference","previous_headings":"","what":"Output","title":"Create summary reports of receiver project data from the OTN data push — matos_receiver_summary","text":"function creates HTML report can viewed web browser.","code":""},{"path":"https://www.obrien.page/matos/reference/matos_receiver_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create summary reports of receiver project data from the OTN data push — matos_receiver_summary","text":"","code":"if (FALSE) { # Using only the ACT/MATOS project number: matos_receiver_summary(87)  # Providing a local file: matos_receiver_summary(87, deployment = \"my_master_deployment_metadata.xlsx\")  # Get a summary fo what has changed since a particular date: matos_receiver_summary(87, since = \"2022-05-01\") }"},{"path":"https://www.obrien.page/matos/reference/matos_tag_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Create summary reports of receiver project data from the OTN data push — matos_tag_summary","title":"Create summary reports of receiver project data from the OTN data push — matos_tag_summary","text":"Create summary reports receiver project data OTN data push","code":""},{"path":"https://www.obrien.page/matos/reference/matos_tag_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create summary reports of receiver project data from the OTN data push — matos_tag_summary","text":"","code":"matos_tag_summary(matos_project = NULL, matched = NULL, ...)"},{"path":"https://www.obrien.page/matos/reference/matos_tag_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create summary reports of receiver project data from the OTN data push — matos_tag_summary","text":"matos_project MATOS project number name wish summarized matched Default NULL: OTN matched detections downloaded MATOS unzipped. wish download files, argument also accepts character vector file paths matched detections. can CSVs zipped folders. ... Arguments passed otndo::make_tag_push_summary","code":""},{"path":"https://www.obrien.page/matos/reference/matos_tag_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create summary reports of receiver project data from the OTN data push — matos_tag_summary","text":"","code":"if (FALSE) { # You can just use your ACT project number matos_tag_summary(87)  # Or provide an optional date to summarize \"What's New\". matos_tag_summary(87, since = \"2018-11-01\") }"},{"path":"https://www.obrien.page/matos/reference/set_matos_credentials.html","id":null,"dir":"Reference","previous_headings":"","what":"Install your MATOS username and password in your .Renviron File for repeated use — set_matos_credentials","title":"Install your MATOS username and password in your .Renviron File for repeated use — set_matos_credentials","text":"code adapted tidycensus::census_api_key. Note saves credentials .Renviron, meaning anyone using computer can theoretically access MATOS username password . ... use carefully!","code":""},{"path":"https://www.obrien.page/matos/reference/set_matos_credentials.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Install your MATOS username and password in your .Renviron File for repeated use — set_matos_credentials","text":"","code":"set_matos_credentials(overwrite = FALSE)"},{"path":"https://www.obrien.page/matos/reference/set_matos_credentials.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Install your MATOS username and password in your .Renviron File for repeated use — set_matos_credentials","text":"overwrite Logical. Overwrite previously-stored MATOS credentials?","code":""},{"path":"https://www.obrien.page/matos/reference/set_matos_credentials.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Install your MATOS username and password in your .Renviron File for repeated use — set_matos_credentials","text":"","code":"if (FALSE) { set_matos_credentials()  # Yup, that's it! }"},{"path":"https://www.obrien.page/matos/reference/upload_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Upload files to MATOS — upload_file","title":"Upload files to MATOS — upload_file","text":"function lets post files projects. need log uploading.","code":""},{"path":"https://www.obrien.page/matos/reference/upload_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upload files to MATOS — upload_file","text":"","code":"upload_file(   project,   file,   data_type = c(\"new_tags\", \"receivers\", \"detections\", \"events\", \"gps\", \"glider\"),   print_response = F )"},{"path":"https://www.obrien.page/matos/reference/upload_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upload files to MATOS — upload_file","text":"project name (character) number (numeric) project wish post file. file file(s) wish upload. file located working directory, can just filename extension. need provide full file location located elsewhere. data_type Character string. data type uploading. One : \"new_tags\" (default), \"receivers\", \"detections\", \"events\", \"gps\", \"glider\". print_response Logical. want POST response printed? Mostly useful diagnostic purposes. Default FALSE.","code":""},{"path":"https://www.obrien.page/matos/reference/upload_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upload files to MATOS — upload_file","text":"notification success file upload returned.","code":""},{"path":"https://www.obrien.page/matos/reference/upload_file.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Upload files to MATOS — upload_file","text":"upload_file takes project name number, file want upload, type file want upload (defaulting VRL transmitter detections).","code":"If data_type is \"new_tags\", \"receivers\", or \"glider\", only CSV and XLS/XLSX files are accepted; if \"detections\", only VRL and CSV files are accepted; if \"events\" or \"gps\", only CSV is accepted.  Multiple files can be uploaded at once, but they must all be the same data type and posted to the same project."},{"path":"https://www.obrien.page/matos/reference/upload_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Upload files to MATOS — upload_file","text":"","code":"if (FALSE) { # Newly tagged fish, the default upload_file(87, \"your_tagged_fish.xls\") upload_file(87, \"your_tagged_fish.xls\", \"new_tags\")  # Transmitter detections upload_file(   \"umces boem offshore wind energy\",   \"c:/wherever/your_CSV_detections.csv\",   \"detections\" ) upload_file(   \"umces boem offshore wind energy\",   \"c:/wherever/your_VRL_detections.vrl\",   \"detections\" )  # Receiver metadata upload_file(   \"umces boem offshore wind energy\",   \"your_receiver_metadata.xlsx\", \"receivers\" ) }"},{"path":"https://www.obrien.page/matos/reference/utilities.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal functions used by matos — utilities","title":"Internal functions used by matos — utilities","text":"Non-exported utility functions used functions matos.","code":""},{"path":"https://www.obrien.page/matos/reference/utilities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal functions used by matos — utilities","text":"","code":"get_file_list(project_number, data_type)  get_project_number(project_name, matos_projects = NULL)  get_project_name(project_number, matos_projects = NULL)  html_table_to_df(html_file_list)  login_check(url = \"https://matos.asascience.com/report/submit\")  project_check(project, return_projects = FALSE)  scrape_file_urls(html_file_list)  download_process(url, out_dir, overwrite, to_vue)"},{"path":"https://www.obrien.page/matos/reference/utilities.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal functions used by matos — utilities","text":"project_number Number project data_type one \"dataextractionfiles\" \"projectfiles\". project_name Character string full MATOS project name. big name bold top project page, \"Project Title\" . coerced lower case, capitalization matter. matos_projects Data frame. Used pass MATOS project list project_check. html_file_list Listed files HTML form. Always result get_file_list url (protected) URL overlapping function trying call. project MATOS projecct ID. Can name number project. return_projects Logical. want project_check return list projects? Used ping website much one function call. out_dir Character. directory like files downloaded? Defaults current working directory. overwrite Logical. want overwrite existing files name (TRUE) protect (FALSE, default)? to_vue Logical. data converted match VUE's CSV export?","code":""},{"path":"https://www.obrien.page/matos/reference/utilities.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Internal functions used by matos — utilities","text":"get_file_list scrapes HTML associated project data extraction files page provided given project. get_project_number finds internal MATOS number associated project scraping HTML main MATOS projects page. get_project_name finds MATOS project name associated given project number scraping HTML main MATOS projects page. html_table_to_df converts HTML table provided get_file_list R-usable data frame. login_check pings protected URLs calls matos_login referred login page. project_check scrape_file_urls used internally html_table_to_df extract URLs associates \"Download\" link. download_process used internally get_project_file get_extract_file","code":""},{"path":"https://www.obrien.page/matos/news/index.html","id":"matos-0400","dir":"Changelog","previous_headings":"","what":"matos 0.4.00","title":"matos 0.4.00","text":"API calls cached via memoise package, meaning MATOS queryed unless absolutely necessary. Big speed listing files/projects!","code":""},{"path":"https://www.obrien.page/matos/news/index.html","id":"matos-03","dir":"Changelog","previous_headings":"","what":"matos 0.3","title":"matos 0.3","text":"Precompile vignettes allow r-universe build. (matos 0.3.005) Fix broken link set_matos_credentials documentation. (matos 0.3.004) Fix upload_file actually allow multiple uploads. (matos 0.3.003) meat make_tag_push_summary make_receiver_push_summary moved new package: otndo. functions now wrap otndo renamed matos_tag_summary matos_receiver_summary, respectively. list_extract_files list_project_files now accept vectors different detection/file types subset returned data frame. Misc. tests added","code":""},{"path":"https://www.obrien.page/matos/news/index.html","id":"matos-021","dir":"Changelog","previous_headings":"","what":"matos 0.2.1","title":"matos 0.2.1","text":"matos_logoff, allowing log MATOS session. (matos 0.2.13) draft vignette manage multiple telemetry projects using matos parallel. (matos 0.2.13) make_receiver_push_summary make_tag_push_summary now scrape OTN GeoServer order get correct title project summaries! (matos 0.2.13) -informative error now appears try find information project doesn’t exist. (matos 0.2.13) website moved https://matos.obrien.page/. (matos 0.2.1) NEW function! Allows store MATOS credentials .Renviron seamless log . NEW function! Undergoing heavy development, please file issues bugs suggestions. Summarize TON returns tagged fish! make_tag_push_summary make_receiver_push_summary now accept zipped folders input.","code":""},{"path":"https://www.obrien.page/matos/news/index.html","id":"matos-02","dir":"Changelog","previous_headings":"","what":"matos 0.2","title":"matos 0.2","text":"package pkgdown website https://mhpob.github.io/matos/ act_push_summary live! currently receiver summaries, tag summaries coming soon. LIST files see GET files also… UPLOAD. didn’t fit pithy saying. functions, namely list_files get_file split functions fewer options clearer names (list_extract_files list_project_files, e.g.). Hopefully make things intuitive.","code":""},{"path":"https://www.obrien.page/matos/news/index.html","id":"matos-011","dir":"Changelog","previous_headings":"","what":"matos 0.1.1","title":"matos 0.1.1","text":"get_updates: new function download files updated since given date. Super useful data push! list_files now since argument, allowing list files updated since certain date. Added NEWS.md file track changes package.","code":""}]
